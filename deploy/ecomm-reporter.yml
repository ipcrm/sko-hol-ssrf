---
ecomm-reporter: # Deployment
  description: |
    This plan will do the following;
        - Create a new AWS VPC
        - Create two new Ubuntu EC2 instances
        - Create a new S3 bucket
  required_secrets:
    - path: ecomm.database_host
    - path: ecomm.database_name
    - path: ecomm.database_user
    - path: ecomm.database_pass
  steps:
    - name: reporter-vpc
      description: Create a new AWS Virtual Private Cloud (VPC) for the reporter app to reside in
      extension: VPC.AWS
      tags: infrastructure
      args:
        name: reporter-vpc
    - name: frontend-ec2
      description: Create a new Ubuntu AWS EC2 instance that will host the reporter application
      extension: EC2Instance
      tags: infrastructure
      needs:
        - reporter-vpc
      args:
        vpc_id: !lookup /reporter-vpc/outputs/vpc_id
        subnet: !lookup /reporter-vpc/outputs/subnet_id1
        instance_name: reporter1-ec2
        ports: "22,8080"
    - name: backend-ec2
      description: Create a new Ubuntu AWS EC2 instance that will host the reporter application
      extension: EC2Instance
      tags: infrastructure
      needs:
        - reporter-vpc
      args:
        vpc_id: !lookup /reporter-vpc/outputs/vpc_id
        subnet: !lookup /reporter-vpc/outputs/subnet_id1
        instance_name: reporter1-ec2-2
        ports: "22"
    - name: reporter-s3
      extension: Terraform
      source: /Users/matthewcadorette/git/sko-hol-ssrf/deploy/tf
        # location: "git+https://github.com/lacework-dev/detc-resources.git"
        # subdir: "extensions/ec2instance"     description: Create a new Ubuntu AWS EC2 instance that will host the reporter application
      tags: infrastructure
      needs:
        - reporter-vpc
      args:
        cloud: "AWS"
        outputs:
          - bucket
    - name: install-reporter-backend
      extension: Ansible
      source: /Users/matthewcadorette/git/sko-hol-ssrf/deploy/ansible/backend.yml
      needs:
        - backend-ec2
      helpers:
        - helper: ServiceAvailable
          args:
            max_wait: 60 # seconds
            hostname: !lookup /backend-ec2/outputs/ip
            port: 22
        - helper: WriteValue
          run_on_dryrun: true
          args:
            raw_value: !lookupSecret /backend-ec2/outputs/pem
            dstfile: instance.pem
            mode: 0600
      args:
        user: "ubuntu"
        private_key: instance.pem
        inventory: !lookup /backend-ec2/outputs/ip
        playbook: backend.yml
        privilege_escalation:
          become: true
        extra_vars:
          ecomm_reporter_bucket: !lookup /reporter-s3/outputs/bucket
          ecomm_reporter_object_storage_endpoint: https://s3.amazonaws.com
    - name: install-reporter-frontend
      extension: Ansible
      source: /Users/matthewcadorette/git/sko-hol-ssrf/deploy/ansible/frontend.yml
      needs:
        - frontend-ec2
        - install-reporter-backend
      helpers:
        - helper: ServiceAvailable
          args:
            max_wait: 60 # seconds
            hostname: !lookup /frontend-ec2/outputs/ip
            port: 22
        - helper: WriteValue
          run_on_dryrun: true
          args:
            raw_value: !lookupSecret /frontend-ec2/outputs/pem
            dstfile: instance.pem
            mode: 0600
        - helper: GenerateOutput
          lifecycle: [afterCreate]
          run_on_dryrun: false
          args:
            dst: app_url
            format: "http://{{ .inventory }}:8080"
      args:
        user: "ubuntu"
        private_key: instance.pem
        inventory: !lookup /frontend-ec2/outputs/ip
        playbook: frontend.yml
        privilege_escalation:
          become: true
        extra_vars:
          ecomm_reporter_endpoint: !lookup /backend-ec2/outputs/private_ip
          ecomm_database_host: !secret ecomm.database_host
          ecomm_database_name: !secret ecomm.database_name
          ecomm_database_user: !secret ecomm.database_user
          ecomm_database_pass: !secret ecomm.database_pass
